// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internalapi/central/deployment_enhancement.proto

package central

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	storage "github.com/stackrox/rox/generated/storage"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeploymentEnhancementRequest struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Deployment           *storage.Deployment `protobuf:"bytes,2,opt,name=deployment,proto3" json:"deployment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DeploymentEnhancementRequest) Reset()         { *m = DeploymentEnhancementRequest{} }
func (m *DeploymentEnhancementRequest) String() string { return proto.CompactTextString(m) }
func (*DeploymentEnhancementRequest) ProtoMessage()    {}
func (*DeploymentEnhancementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_481d8d3bdf1f6bc6, []int{0}
}
func (m *DeploymentEnhancementRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeploymentEnhancementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeploymentEnhancementRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeploymentEnhancementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentEnhancementRequest.Merge(m, src)
}
func (m *DeploymentEnhancementRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeploymentEnhancementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentEnhancementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentEnhancementRequest proto.InternalMessageInfo

func (m *DeploymentEnhancementRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeploymentEnhancementRequest) GetDeployment() *storage.Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *DeploymentEnhancementRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *DeploymentEnhancementRequest) Clone() *DeploymentEnhancementRequest {
	if m == nil {
		return nil
	}
	cloned := new(DeploymentEnhancementRequest)
	*cloned = *m

	cloned.Deployment = m.Deployment.Clone()
	return cloned
}

type DeploymentEnhancementResponse struct {
	Id                     string                                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Deployment             *storage.Deployment                                  `protobuf:"bytes,2,opt,name=deployment,proto3" json:"deployment,omitempty"`
	NetworkPoliciesApplied *DeploymentEnhancementResponseNetworkPoliciesApplied `protobuf:"bytes,3,opt,name=network_policies_applied,json=networkPoliciesApplied,proto3" json:"network_policies_applied,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                             `json:"-"`
	XXX_unrecognized       []byte                                               `json:"-"`
	XXX_sizecache          int32                                                `json:"-"`
}

func (m *DeploymentEnhancementResponse) Reset()         { *m = DeploymentEnhancementResponse{} }
func (m *DeploymentEnhancementResponse) String() string { return proto.CompactTextString(m) }
func (*DeploymentEnhancementResponse) ProtoMessage()    {}
func (*DeploymentEnhancementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_481d8d3bdf1f6bc6, []int{1}
}
func (m *DeploymentEnhancementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeploymentEnhancementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeploymentEnhancementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeploymentEnhancementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentEnhancementResponse.Merge(m, src)
}
func (m *DeploymentEnhancementResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeploymentEnhancementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentEnhancementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentEnhancementResponse proto.InternalMessageInfo

func (m *DeploymentEnhancementResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeploymentEnhancementResponse) GetDeployment() *storage.Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *DeploymentEnhancementResponse) GetNetworkPoliciesApplied() *DeploymentEnhancementResponseNetworkPoliciesApplied {
	if m != nil {
		return m.NetworkPoliciesApplied
	}
	return nil
}

func (m *DeploymentEnhancementResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *DeploymentEnhancementResponse) Clone() *DeploymentEnhancementResponse {
	if m == nil {
		return nil
	}
	cloned := new(DeploymentEnhancementResponse)
	*cloned = *m

	cloned.Deployment = m.Deployment.Clone()
	cloned.NetworkPoliciesApplied = m.NetworkPoliciesApplied.Clone()
	return cloned
}

type DeploymentEnhancementResponseNetworkPoliciesApplied struct {
	HasEgressPolicy      bool                              `protobuf:"varint,1,opt,name=hasEgressPolicy,proto3" json:"hasEgressPolicy,omitempty"`
	HasIngressPolicy     bool                              `protobuf:"varint,2,opt,name=hasIngressPolicy,proto3" json:"hasIngressPolicy,omitempty"`
	AppliedPolicies      map[string]*storage.NetworkPolicy `protobuf:"bytes,3,rep,name=appliedPolicies,proto3" json:"appliedPolicies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) Reset() {
	*m = DeploymentEnhancementResponseNetworkPoliciesApplied{}
}
func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) String() string {
	return proto.CompactTextString(m)
}
func (*DeploymentEnhancementResponseNetworkPoliciesApplied) ProtoMessage() {}
func (*DeploymentEnhancementResponseNetworkPoliciesApplied) Descriptor() ([]byte, []int) {
	return fileDescriptor_481d8d3bdf1f6bc6, []int{1, 0}
}
func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeploymentEnhancementResponseNetworkPoliciesApplied.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentEnhancementResponseNetworkPoliciesApplied.Merge(m, src)
}
func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) XXX_Size() int {
	return m.Size()
}
func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentEnhancementResponseNetworkPoliciesApplied.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentEnhancementResponseNetworkPoliciesApplied proto.InternalMessageInfo

func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) GetHasEgressPolicy() bool {
	if m != nil {
		return m.HasEgressPolicy
	}
	return false
}

func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) GetHasIngressPolicy() bool {
	if m != nil {
		return m.HasIngressPolicy
	}
	return false
}

func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) GetAppliedPolicies() map[string]*storage.NetworkPolicy {
	if m != nil {
		return m.AppliedPolicies
	}
	return nil
}

func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) MessageClone() proto.Message {
	return m.Clone()
}
func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) Clone() *DeploymentEnhancementResponseNetworkPoliciesApplied {
	if m == nil {
		return nil
	}
	cloned := new(DeploymentEnhancementResponseNetworkPoliciesApplied)
	*cloned = *m

	if m.AppliedPolicies != nil {
		cloned.AppliedPolicies = make(map[string]*storage.NetworkPolicy, len(m.AppliedPolicies))
		for k, v := range m.AppliedPolicies {
			cloned.AppliedPolicies[k] = v.Clone()
		}
	}
	return cloned
}

func init() {
	proto.RegisterType((*DeploymentEnhancementRequest)(nil), "DeploymentEnhancementRequest")
	proto.RegisterType((*DeploymentEnhancementResponse)(nil), "DeploymentEnhancementResponse")
	proto.RegisterType((*DeploymentEnhancementResponseNetworkPoliciesApplied)(nil), "DeploymentEnhancementResponse.networkPoliciesApplied")
	proto.RegisterMapType((map[string]*storage.NetworkPolicy)(nil), "DeploymentEnhancementResponse.networkPoliciesApplied.AppliedPoliciesEntry")
}

func init() {
	proto.RegisterFile("internalapi/central/deployment_enhancement.proto", fileDescriptor_481d8d3bdf1f6bc6)
}

var fileDescriptor_481d8d3bdf1f6bc6 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xcb, 0x4e, 0xf2, 0x40,
	0x14, 0xfe, 0xdb, 0xfe, 0x37, 0x0f, 0x89, 0x90, 0xd1, 0x90, 0x4a, 0xb0, 0x21, 0xac, 0x1a, 0x63,
	0x8a, 0x81, 0x98, 0x18, 0x77, 0x18, 0x59, 0xe8, 0xc2, 0x98, 0x2e, 0xd9, 0x90, 0xb1, 0x3d, 0x81,
	0x86, 0x3a, 0x53, 0x67, 0x06, 0x4d, 0xdf, 0x84, 0xc7, 0x71, 0xe9, 0xd2, 0x47, 0x30, 0xf8, 0x22,
	0x86, 0x32, 0x40, 0x41, 0x70, 0x61, 0xdc, 0x4d, 0xce, 0x77, 0x9b, 0x2f, 0xe7, 0xc0, 0x49, 0xc4,
	0x14, 0x0a, 0x46, 0x63, 0x9a, 0x44, 0x8d, 0x00, 0x99, 0x12, 0x34, 0x6e, 0x84, 0x98, 0xc4, 0x3c,
	0xbd, 0x47, 0xa6, 0x7a, 0xc8, 0x06, 0x94, 0x05, 0x38, 0x7d, 0x7b, 0x89, 0xe0, 0x8a, 0x57, 0x6c,
	0xa9, 0xb8, 0xa0, 0x7d, 0xcc, 0xb1, 0x34, 0x52, 0x9d, 0x23, 0x0c, 0xd5, 0x13, 0x17, 0xc3, 0x5e,
	0xc2, 0xe3, 0x28, 0x48, 0x67, 0x68, 0x3d, 0x80, 0xea, 0xe5, 0x42, 0xd1, 0x59, 0xda, 0xfa, 0xf8,
	0x30, 0x42, 0xa9, 0xc8, 0x2e, 0x98, 0x51, 0x68, 0x1b, 0x35, 0xc3, 0xdd, 0xf1, 0xcd, 0x28, 0x24,
	0x2d, 0x80, 0x65, 0x82, 0x6d, 0xd6, 0x0c, 0xb7, 0xd0, 0xdc, 0xf3, 0x74, 0x84, 0xb7, 0xb4, 0xf2,
	0x73, 0xb4, 0xfa, 0xf8, 0x37, 0x1c, 0x6e, 0x49, 0x91, 0x09, 0x67, 0x12, 0x7f, 0x24, 0x86, 0x70,
	0xb0, 0x57, 0x3a, 0x46, 0x28, 0x7b, 0x34, 0x49, 0xe2, 0x08, 0x43, 0xdb, 0xca, 0x2c, 0x4e, 0xbd,
	0x2f, 0xbf, 0xe1, 0x69, 0xf9, 0xad, 0x56, 0xb7, 0x67, 0x62, 0xbf, 0xbc, 0x79, 0x5e, 0x79, 0x36,
	0x61, 0x0b, 0x44, 0x5c, 0x28, 0x0e, 0xa8, 0xec, 0xf4, 0x05, 0x4a, 0x99, 0x61, 0x69, 0xd6, 0xee,
	0xbf, 0xbf, 0x3e, 0x26, 0x47, 0x50, 0x1a, 0x50, 0x79, 0xc5, 0xf2, 0x54, 0x33, 0xa3, 0x7e, 0x9a,
	0x13, 0x05, 0x45, 0x5d, 0x68, 0x9e, 0x67, 0x5b, 0x35, 0xcb, 0x2d, 0x34, 0xaf, 0xbf, 0x55, 0xcc,
	0x6b, 0xaf, 0x9a, 0x75, 0x98, 0x12, 0xa9, 0xbf, 0x1e, 0x51, 0xe9, 0xc2, 0xfe, 0x26, 0x22, 0x29,
	0x81, 0x35, 0xc4, 0x54, 0x6f, 0x6d, 0xfa, 0x24, 0xc7, 0xf0, 0xe7, 0x91, 0xc6, 0x23, 0xd4, 0x1b,
	0x2b, 0x2f, 0x36, 0x76, 0x93, 0xcb, 0x4f, 0xfd, 0x19, 0xe9, 0xdc, 0x3c, 0x33, 0x2e, 0x0e, 0x5e,
	0x26, 0x8e, 0xf1, 0x3a, 0x71, 0x8c, 0xb7, 0x89, 0x63, 0x8c, 0xdf, 0x9d, 0x5f, 0xdd, 0x7f, 0xfa,
	0xde, 0xef, 0xfe, 0x66, 0x17, 0xda, 0xfa, 0x08, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x8b, 0x8d, 0xa4,
	0x0d, 0x03, 0x00, 0x00,
}

func (m *DeploymentEnhancementRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeploymentEnhancementRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeploymentEnhancementRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Deployment != nil {
		{
			size, err := m.Deployment.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDeploymentEnhancement(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintDeploymentEnhancement(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeploymentEnhancementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeploymentEnhancementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeploymentEnhancementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NetworkPoliciesApplied != nil {
		{
			size, err := m.NetworkPoliciesApplied.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDeploymentEnhancement(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Deployment != nil {
		{
			size, err := m.Deployment.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDeploymentEnhancement(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintDeploymentEnhancement(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AppliedPolicies) > 0 {
		for k := range m.AppliedPolicies {
			v := m.AppliedPolicies[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintDeploymentEnhancement(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintDeploymentEnhancement(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintDeploymentEnhancement(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.HasIngressPolicy {
		i--
		if m.HasIngressPolicy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.HasEgressPolicy {
		i--
		if m.HasEgressPolicy {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintDeploymentEnhancement(dAtA []byte, offset int, v uint64) int {
	offset -= sovDeploymentEnhancement(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DeploymentEnhancementRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovDeploymentEnhancement(uint64(l))
	}
	if m.Deployment != nil {
		l = m.Deployment.Size()
		n += 1 + l + sovDeploymentEnhancement(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeploymentEnhancementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovDeploymentEnhancement(uint64(l))
	}
	if m.Deployment != nil {
		l = m.Deployment.Size()
		n += 1 + l + sovDeploymentEnhancement(uint64(l))
	}
	if m.NetworkPoliciesApplied != nil {
		l = m.NetworkPoliciesApplied.Size()
		n += 1 + l + sovDeploymentEnhancement(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HasEgressPolicy {
		n += 2
	}
	if m.HasIngressPolicy {
		n += 2
	}
	if len(m.AppliedPolicies) > 0 {
		for k, v := range m.AppliedPolicies {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovDeploymentEnhancement(uint64(l))
			}
			mapEntrySize := 1 + len(k) + sovDeploymentEnhancement(uint64(len(k))) + l
			n += mapEntrySize + 1 + sovDeploymentEnhancement(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDeploymentEnhancement(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDeploymentEnhancement(x uint64) (n int) {
	return sovDeploymentEnhancement(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DeploymentEnhancementRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentEnhancement
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeploymentEnhancementRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeploymentEnhancementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentEnhancement
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deployment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentEnhancement
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Deployment == nil {
				m.Deployment = &storage.Deployment{}
			}
			if err := m.Deployment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentEnhancement(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeploymentEnhancementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentEnhancement
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeploymentEnhancementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeploymentEnhancementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentEnhancement
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deployment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentEnhancement
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Deployment == nil {
				m.Deployment = &storage.Deployment{}
			}
			if err := m.Deployment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkPoliciesApplied", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentEnhancement
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NetworkPoliciesApplied == nil {
				m.NetworkPoliciesApplied = &DeploymentEnhancementResponseNetworkPoliciesApplied{}
			}
			if err := m.NetworkPoliciesApplied.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentEnhancement(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeploymentEnhancementResponseNetworkPoliciesApplied) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentEnhancement
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: networkPoliciesApplied: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: networkPoliciesApplied: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasEgressPolicy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentEnhancement
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasEgressPolicy = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasIngressPolicy", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentEnhancement
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasIngressPolicy = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppliedPolicies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentEnhancement
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AppliedPolicies == nil {
				m.AppliedPolicies = make(map[string]*storage.NetworkPolicy)
			}
			var mapkey string
			var mapvalue *storage.NetworkPolicy
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDeploymentEnhancement
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDeploymentEnhancement
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthDeploymentEnhancement
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthDeploymentEnhancement
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDeploymentEnhancement
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthDeploymentEnhancement
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthDeploymentEnhancement
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &storage.NetworkPolicy{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipDeploymentEnhancement(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthDeploymentEnhancement
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.AppliedPolicies[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentEnhancement(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeploymentEnhancement
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDeploymentEnhancement(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDeploymentEnhancement
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeploymentEnhancement
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeploymentEnhancement
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDeploymentEnhancement
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDeploymentEnhancement
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDeploymentEnhancement
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDeploymentEnhancement        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDeploymentEnhancement          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDeploymentEnhancement = fmt.Errorf("proto: unexpected end of group")
)
