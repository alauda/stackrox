// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.22.0
// source: internalapi/central/compliance_operator.proto

package central

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the severity of the rule
type ComplianceOperatorRuleSeverity int32

const (
	ComplianceOperatorRuleSeverity_UNSET_RULE_SEVERITY   ComplianceOperatorRuleSeverity = 0
	ComplianceOperatorRuleSeverity_UNKNOWN_RULE_SEVERITY ComplianceOperatorRuleSeverity = 1
	ComplianceOperatorRuleSeverity_INFO_RULE_SEVERITY    ComplianceOperatorRuleSeverity = 2
	ComplianceOperatorRuleSeverity_LOW_RULE_SEVERITY     ComplianceOperatorRuleSeverity = 3
	ComplianceOperatorRuleSeverity_MEDIUM_RULE_SEVERITY  ComplianceOperatorRuleSeverity = 4
	ComplianceOperatorRuleSeverity_HIGH_RULE_SEVERITY    ComplianceOperatorRuleSeverity = 5
)

// Enum value maps for ComplianceOperatorRuleSeverity.
var (
	ComplianceOperatorRuleSeverity_name = map[int32]string{
		0: "UNSET_RULE_SEVERITY",
		1: "UNKNOWN_RULE_SEVERITY",
		2: "INFO_RULE_SEVERITY",
		3: "LOW_RULE_SEVERITY",
		4: "MEDIUM_RULE_SEVERITY",
		5: "HIGH_RULE_SEVERITY",
	}
	ComplianceOperatorRuleSeverity_value = map[string]int32{
		"UNSET_RULE_SEVERITY":   0,
		"UNKNOWN_RULE_SEVERITY": 1,
		"INFO_RULE_SEVERITY":    2,
		"LOW_RULE_SEVERITY":     3,
		"MEDIUM_RULE_SEVERITY":  4,
		"HIGH_RULE_SEVERITY":    5,
	}
)

func (x ComplianceOperatorRuleSeverity) Enum() *ComplianceOperatorRuleSeverity {
	p := new(ComplianceOperatorRuleSeverity)
	*p = x
	return p
}

func (x ComplianceOperatorRuleSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplianceOperatorRuleSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_central_compliance_operator_proto_enumTypes[0].Descriptor()
}

func (ComplianceOperatorRuleSeverity) Type() protoreflect.EnumType {
	return &file_internalapi_central_compliance_operator_proto_enumTypes[0]
}

func (x ComplianceOperatorRuleSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComplianceOperatorRuleSeverity.Descriptor instead.
func (ComplianceOperatorRuleSeverity) EnumDescriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{0}
}

type ComplianceOperatorCheckResultV2_CheckStatus int32

const (
	ComplianceOperatorCheckResultV2_UNSET          ComplianceOperatorCheckResultV2_CheckStatus = 0
	ComplianceOperatorCheckResultV2_PASS           ComplianceOperatorCheckResultV2_CheckStatus = 1
	ComplianceOperatorCheckResultV2_FAIL           ComplianceOperatorCheckResultV2_CheckStatus = 2
	ComplianceOperatorCheckResultV2_ERROR          ComplianceOperatorCheckResultV2_CheckStatus = 3
	ComplianceOperatorCheckResultV2_INFO           ComplianceOperatorCheckResultV2_CheckStatus = 4
	ComplianceOperatorCheckResultV2_MANUAL         ComplianceOperatorCheckResultV2_CheckStatus = 5
	ComplianceOperatorCheckResultV2_NOT_APPLICABLE ComplianceOperatorCheckResultV2_CheckStatus = 6
	ComplianceOperatorCheckResultV2_INCONSISTENT   ComplianceOperatorCheckResultV2_CheckStatus = 7
)

// Enum value maps for ComplianceOperatorCheckResultV2_CheckStatus.
var (
	ComplianceOperatorCheckResultV2_CheckStatus_name = map[int32]string{
		0: "UNSET",
		1: "PASS",
		2: "FAIL",
		3: "ERROR",
		4: "INFO",
		5: "MANUAL",
		6: "NOT_APPLICABLE",
		7: "INCONSISTENT",
	}
	ComplianceOperatorCheckResultV2_CheckStatus_value = map[string]int32{
		"UNSET":          0,
		"PASS":           1,
		"FAIL":           2,
		"ERROR":          3,
		"INFO":           4,
		"MANUAL":         5,
		"NOT_APPLICABLE": 6,
		"INCONSISTENT":   7,
	}
)

func (x ComplianceOperatorCheckResultV2_CheckStatus) Enum() *ComplianceOperatorCheckResultV2_CheckStatus {
	p := new(ComplianceOperatorCheckResultV2_CheckStatus)
	*p = x
	return p
}

func (x ComplianceOperatorCheckResultV2_CheckStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplianceOperatorCheckResultV2_CheckStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_central_compliance_operator_proto_enumTypes[1].Descriptor()
}

func (ComplianceOperatorCheckResultV2_CheckStatus) Type() protoreflect.EnumType {
	return &file_internalapi_central_compliance_operator_proto_enumTypes[1]
}

func (x ComplianceOperatorCheckResultV2_CheckStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComplianceOperatorCheckResultV2_CheckStatus.Descriptor instead.
func (ComplianceOperatorCheckResultV2_CheckStatus) EnumDescriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{7, 0}
}

// ComplianceOperatorInfo has basic info and status about the compliance operator.
type ComplianceOperatorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The following fields are made optional/nullable because there can be errors when trying to obtain them.
	//
	// Types that are assignable to TotalDesiredPodsOpt:
	//
	//	*ComplianceOperatorInfo_TotalDesiredPods
	TotalDesiredPodsOpt isComplianceOperatorInfo_TotalDesiredPodsOpt `protobuf_oneof:"total_desired_pods_opt"`
	// Types that are assignable to TotalReadyPodsOpt:
	//
	//	*ComplianceOperatorInfo_TotalReadyPods
	TotalReadyPodsOpt isComplianceOperatorInfo_TotalReadyPodsOpt `protobuf_oneof:"total_ready_pods_opt"`
	// Collection of errors that occurred while trying to obtain collector health info.
	StatusError string `protobuf:"bytes,5,opt,name=status_error,json=statusError,proto3" json:"status_error,omitempty"`
}

func (x *ComplianceOperatorInfo) Reset() {
	*x = ComplianceOperatorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceOperatorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorInfo) ProtoMessage() {}

func (x *ComplianceOperatorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceOperatorInfo.ProtoReflect.Descriptor instead.
func (*ComplianceOperatorInfo) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{0}
}

func (x *ComplianceOperatorInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ComplianceOperatorInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (m *ComplianceOperatorInfo) GetTotalDesiredPodsOpt() isComplianceOperatorInfo_TotalDesiredPodsOpt {
	if m != nil {
		return m.TotalDesiredPodsOpt
	}
	return nil
}

func (x *ComplianceOperatorInfo) GetTotalDesiredPods() int32 {
	if x, ok := x.GetTotalDesiredPodsOpt().(*ComplianceOperatorInfo_TotalDesiredPods); ok {
		return x.TotalDesiredPods
	}
	return 0
}

func (m *ComplianceOperatorInfo) GetTotalReadyPodsOpt() isComplianceOperatorInfo_TotalReadyPodsOpt {
	if m != nil {
		return m.TotalReadyPodsOpt
	}
	return nil
}

func (x *ComplianceOperatorInfo) GetTotalReadyPods() int32 {
	if x, ok := x.GetTotalReadyPodsOpt().(*ComplianceOperatorInfo_TotalReadyPods); ok {
		return x.TotalReadyPods
	}
	return 0
}

func (x *ComplianceOperatorInfo) GetStatusError() string {
	if x != nil {
		return x.StatusError
	}
	return ""
}

type isComplianceOperatorInfo_TotalDesiredPodsOpt interface {
	isComplianceOperatorInfo_TotalDesiredPodsOpt()
}

type ComplianceOperatorInfo_TotalDesiredPods struct {
	TotalDesiredPods int32 `protobuf:"varint,3,opt,name=total_desired_pods,json=totalDesiredPods,proto3,oneof"`
}

func (*ComplianceOperatorInfo_TotalDesiredPods) isComplianceOperatorInfo_TotalDesiredPodsOpt() {}

type isComplianceOperatorInfo_TotalReadyPodsOpt interface {
	isComplianceOperatorInfo_TotalReadyPodsOpt()
}

type ComplianceOperatorInfo_TotalReadyPods struct {
	TotalReadyPods int32 `protobuf:"varint,4,opt,name=total_ready_pods,json=totalReadyPods,proto3,oneof"`
}

func (*ComplianceOperatorInfo_TotalReadyPods) isComplianceOperatorInfo_TotalReadyPodsOpt() {}

type EnableComplianceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EnableComplianceRequest) Reset() {
	*x = EnableComplianceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableComplianceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableComplianceRequest) ProtoMessage() {}

func (x *EnableComplianceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableComplianceRequest.ProtoReflect.Descriptor instead.
func (*EnableComplianceRequest) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{1}
}

func (x *EnableComplianceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DisableComplianceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DisableComplianceRequest) Reset() {
	*x = DisableComplianceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableComplianceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableComplianceRequest) ProtoMessage() {}

func (x *DisableComplianceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableComplianceRequest.ProtoReflect.Descriptor instead.
func (*DisableComplianceRequest) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{2}
}

func (x *DisableComplianceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ApplyComplianceScanConfigRequest contains information about a compliance scan configuration to be applied to secured cluster.
type ApplyComplianceScanConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to ScanRequest:
	//
	//	*ApplyComplianceScanConfigRequest_OneTimeScan_
	//	*ApplyComplianceScanConfigRequest_ScheduledScan_
	//	*ApplyComplianceScanConfigRequest_RerunScan
	ScanRequest isApplyComplianceScanConfigRequest_ScanRequest `protobuf_oneof:"scan_request"`
}

func (x *ApplyComplianceScanConfigRequest) Reset() {
	*x = ApplyComplianceScanConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyComplianceScanConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyComplianceScanConfigRequest) ProtoMessage() {}

func (x *ApplyComplianceScanConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyComplianceScanConfigRequest.ProtoReflect.Descriptor instead.
func (*ApplyComplianceScanConfigRequest) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{3}
}

func (x *ApplyComplianceScanConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *ApplyComplianceScanConfigRequest) GetScanRequest() isApplyComplianceScanConfigRequest_ScanRequest {
	if m != nil {
		return m.ScanRequest
	}
	return nil
}

func (x *ApplyComplianceScanConfigRequest) GetOneTimeScan() *ApplyComplianceScanConfigRequest_OneTimeScan {
	if x, ok := x.GetScanRequest().(*ApplyComplianceScanConfigRequest_OneTimeScan_); ok {
		return x.OneTimeScan
	}
	return nil
}

func (x *ApplyComplianceScanConfigRequest) GetScheduledScan() *ApplyComplianceScanConfigRequest_ScheduledScan {
	if x, ok := x.GetScanRequest().(*ApplyComplianceScanConfigRequest_ScheduledScan_); ok {
		return x.ScheduledScan
	}
	return nil
}

func (x *ApplyComplianceScanConfigRequest) GetRerunScan() *ApplyComplianceScanConfigRequest_RerunScheduledScan {
	if x, ok := x.GetScanRequest().(*ApplyComplianceScanConfigRequest_RerunScan); ok {
		return x.RerunScan
	}
	return nil
}

type isApplyComplianceScanConfigRequest_ScanRequest interface {
	isApplyComplianceScanConfigRequest_ScanRequest()
}

type ApplyComplianceScanConfigRequest_OneTimeScan_ struct {
	OneTimeScan *ApplyComplianceScanConfigRequest_OneTimeScan `protobuf:"bytes,2,opt,name=one_time_scan,json=oneTimeScan,proto3,oneof"`
}

type ApplyComplianceScanConfigRequest_ScheduledScan_ struct {
	ScheduledScan *ApplyComplianceScanConfigRequest_ScheduledScan `protobuf:"bytes,3,opt,name=scheduled_scan,json=scheduledScan,proto3,oneof"`
}

type ApplyComplianceScanConfigRequest_RerunScan struct {
	RerunScan *ApplyComplianceScanConfigRequest_RerunScheduledScan `protobuf:"bytes,4,opt,name=rerun_scan,json=rerunScan,proto3,oneof"`
}

func (*ApplyComplianceScanConfigRequest_OneTimeScan_) isApplyComplianceScanConfigRequest_ScanRequest() {
}

func (*ApplyComplianceScanConfigRequest_ScheduledScan_) isApplyComplianceScanConfigRequest_ScanRequest() {
}

func (*ApplyComplianceScanConfigRequest_RerunScan) isApplyComplianceScanConfigRequest_ScanRequest() {}

// DeleteComplianceScanConfigRequest contains information about compliance scan configuration to be deleted from secured cluster.
type DeleteComplianceScanConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteComplianceScanConfigRequest) Reset() {
	*x = DeleteComplianceScanConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteComplianceScanConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComplianceScanConfigRequest) ProtoMessage() {}

func (x *DeleteComplianceScanConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComplianceScanConfigRequest.ProtoReflect.Descriptor instead.
func (*DeleteComplianceScanConfigRequest) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteComplianceScanConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteComplianceScanConfigRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ComplianceRequest is a message from Central (to Sensor) to perform an action related to compliance.
type ComplianceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*ComplianceRequest_EnableCompliance
	//	*ComplianceRequest_DisableCompliance
	//	*ComplianceRequest_ApplyScanConfig
	//	*ComplianceRequest_DeleteScanConfig
	Request isComplianceRequest_Request `protobuf_oneof:"request"`
}

func (x *ComplianceRequest) Reset() {
	*x = ComplianceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceRequest) ProtoMessage() {}

func (x *ComplianceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceRequest.ProtoReflect.Descriptor instead.
func (*ComplianceRequest) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{5}
}

func (m *ComplianceRequest) GetRequest() isComplianceRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *ComplianceRequest) GetEnableCompliance() *EnableComplianceRequest {
	if x, ok := x.GetRequest().(*ComplianceRequest_EnableCompliance); ok {
		return x.EnableCompliance
	}
	return nil
}

func (x *ComplianceRequest) GetDisableCompliance() *DisableComplianceRequest {
	if x, ok := x.GetRequest().(*ComplianceRequest_DisableCompliance); ok {
		return x.DisableCompliance
	}
	return nil
}

func (x *ComplianceRequest) GetApplyScanConfig() *ApplyComplianceScanConfigRequest {
	if x, ok := x.GetRequest().(*ComplianceRequest_ApplyScanConfig); ok {
		return x.ApplyScanConfig
	}
	return nil
}

func (x *ComplianceRequest) GetDeleteScanConfig() *DeleteComplianceScanConfigRequest {
	if x, ok := x.GetRequest().(*ComplianceRequest_DeleteScanConfig); ok {
		return x.DeleteScanConfig
	}
	return nil
}

type isComplianceRequest_Request interface {
	isComplianceRequest_Request()
}

type ComplianceRequest_EnableCompliance struct {
	EnableCompliance *EnableComplianceRequest `protobuf:"bytes,1,opt,name=enable_compliance,json=enableCompliance,proto3,oneof"`
}

type ComplianceRequest_DisableCompliance struct {
	DisableCompliance *DisableComplianceRequest `protobuf:"bytes,2,opt,name=disable_compliance,json=disableCompliance,proto3,oneof"`
}

type ComplianceRequest_ApplyScanConfig struct {
	ApplyScanConfig *ApplyComplianceScanConfigRequest `protobuf:"bytes,3,opt,name=apply_scan_config,json=applyScanConfig,proto3,oneof"`
}

type ComplianceRequest_DeleteScanConfig struct {
	DeleteScanConfig *DeleteComplianceScanConfigRequest `protobuf:"bytes,4,opt,name=delete_scan_config,json=deleteScanConfig,proto3,oneof"`
}

func (*ComplianceRequest_EnableCompliance) isComplianceRequest_Request() {}

func (*ComplianceRequest_DisableCompliance) isComplianceRequest_Request() {}

func (*ComplianceRequest_ApplyScanConfig) isComplianceRequest_Request() {}

func (*ComplianceRequest_DeleteScanConfig) isComplianceRequest_Request() {}

// ComplianceResponse is a message from Sensor (to Central) representing success/failure processing request.
type ComplianceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*ComplianceResponse_EnableComplianceResponse_
	//	*ComplianceResponse_DisableComplianceResponse_
	//	*ComplianceResponse_ApplyComplianceScanConfigResponse_
	//	*ComplianceResponse_DeleteComplianceScanConfigResponse_
	Response isComplianceResponse_Response `protobuf_oneof:"response"`
}

func (x *ComplianceResponse) Reset() {
	*x = ComplianceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceResponse) ProtoMessage() {}

func (x *ComplianceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceResponse.ProtoReflect.Descriptor instead.
func (*ComplianceResponse) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{6}
}

func (m *ComplianceResponse) GetResponse() isComplianceResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ComplianceResponse) GetEnableComplianceResponse() *ComplianceResponse_EnableComplianceResponse {
	if x, ok := x.GetResponse().(*ComplianceResponse_EnableComplianceResponse_); ok {
		return x.EnableComplianceResponse
	}
	return nil
}

func (x *ComplianceResponse) GetDisableComplianceResponse() *ComplianceResponse_DisableComplianceResponse {
	if x, ok := x.GetResponse().(*ComplianceResponse_DisableComplianceResponse_); ok {
		return x.DisableComplianceResponse
	}
	return nil
}

func (x *ComplianceResponse) GetApplyComplianceScanConfigResponse() *ComplianceResponse_ApplyComplianceScanConfigResponse {
	if x, ok := x.GetResponse().(*ComplianceResponse_ApplyComplianceScanConfigResponse_); ok {
		return x.ApplyComplianceScanConfigResponse
	}
	return nil
}

func (x *ComplianceResponse) GetDeleteComplianceScanConfigResponse() *ComplianceResponse_DeleteComplianceScanConfigResponse {
	if x, ok := x.GetResponse().(*ComplianceResponse_DeleteComplianceScanConfigResponse_); ok {
		return x.DeleteComplianceScanConfigResponse
	}
	return nil
}

type isComplianceResponse_Response interface {
	isComplianceResponse_Response()
}

type ComplianceResponse_EnableComplianceResponse_ struct {
	EnableComplianceResponse *ComplianceResponse_EnableComplianceResponse `protobuf:"bytes,1,opt,name=enable_compliance_response,json=enableComplianceResponse,proto3,oneof"`
}

type ComplianceResponse_DisableComplianceResponse_ struct {
	DisableComplianceResponse *ComplianceResponse_DisableComplianceResponse `protobuf:"bytes,2,opt,name=disable_compliance_response,json=disableComplianceResponse,proto3,oneof"`
}

type ComplianceResponse_ApplyComplianceScanConfigResponse_ struct {
	ApplyComplianceScanConfigResponse *ComplianceResponse_ApplyComplianceScanConfigResponse `protobuf:"bytes,3,opt,name=apply_compliance_scan_config_response,json=applyComplianceScanConfigResponse,proto3,oneof"`
}

type ComplianceResponse_DeleteComplianceScanConfigResponse_ struct {
	DeleteComplianceScanConfigResponse *ComplianceResponse_DeleteComplianceScanConfigResponse `protobuf:"bytes,4,opt,name=delete_compliance_scan_config_response,json=deleteComplianceScanConfigResponse,proto3,oneof"`
}

func (*ComplianceResponse_EnableComplianceResponse_) isComplianceResponse_Response() {}

func (*ComplianceResponse_DisableComplianceResponse_) isComplianceResponse_Response() {}

func (*ComplianceResponse_ApplyComplianceScanConfigResponse_) isComplianceResponse_Response() {}

func (*ComplianceResponse_DeleteComplianceScanConfigResponse_) isComplianceResponse_Response() {}

// ComplianceOperatorCheckResultV2 is a message from Sensor (to Central) representing a compliance check result.
// Next tag: 16.
type ComplianceOperatorCheckResultV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CheckId      string                                      `protobuf:"bytes,2,opt,name=check_id,json=checkId,proto3" json:"check_id,omitempty"`
	CheckName    string                                      `protobuf:"bytes,3,opt,name=check_name,json=checkName,proto3" json:"check_name,omitempty"`
	ClusterId    string                                      `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Status       ComplianceOperatorCheckResultV2_CheckStatus `protobuf:"varint,5,opt,name=status,proto3,enum=central.ComplianceOperatorCheckResultV2_CheckStatus" json:"status,omitempty"`
	Severity     ComplianceOperatorRuleSeverity              `protobuf:"varint,6,opt,name=severity,proto3,enum=central.ComplianceOperatorRuleSeverity" json:"severity,omitempty"`
	Description  string                                      `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Instructions string                                      `protobuf:"bytes,8,opt,name=instructions,proto3" json:"instructions,omitempty"`
	Labels       map[string]string                           `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations  map[string]string                           `protobuf:"bytes,10,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatedTime  *timestamppb.Timestamp                      `protobuf:"bytes,11,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	Standard     string                                      `protobuf:"bytes,12,opt,name=standard,proto3" json:"standard,omitempty"`
	Control      string                                      `protobuf:"bytes,13,opt,name=control,proto3" json:"control,omitempty"`
	ScanName     string                                      `protobuf:"bytes,14,opt,name=scan_name,json=scanName,proto3" json:"scan_name,omitempty"`
	SuiteName    string                                      `protobuf:"bytes,15,opt,name=suite_name,json=suiteName,proto3" json:"suite_name,omitempty"`
}

func (x *ComplianceOperatorCheckResultV2) Reset() {
	*x = ComplianceOperatorCheckResultV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceOperatorCheckResultV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorCheckResultV2) ProtoMessage() {}

func (x *ComplianceOperatorCheckResultV2) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceOperatorCheckResultV2.ProtoReflect.Descriptor instead.
func (*ComplianceOperatorCheckResultV2) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{7}
}

func (x *ComplianceOperatorCheckResultV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetCheckId() string {
	if x != nil {
		return x.CheckId
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetCheckName() string {
	if x != nil {
		return x.CheckName
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetStatus() ComplianceOperatorCheckResultV2_CheckStatus {
	if x != nil {
		return x.Status
	}
	return ComplianceOperatorCheckResultV2_UNSET
}

func (x *ComplianceOperatorCheckResultV2) GetSeverity() ComplianceOperatorRuleSeverity {
	if x != nil {
		return x.Severity
	}
	return ComplianceOperatorRuleSeverity_UNSET_RULE_SEVERITY
}

func (x *ComplianceOperatorCheckResultV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ComplianceOperatorCheckResultV2) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ComplianceOperatorCheckResultV2) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *ComplianceOperatorCheckResultV2) GetStandard() string {
	if x != nil {
		return x.Standard
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetControl() string {
	if x != nil {
		return x.Control
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetScanName() string {
	if x != nil {
		return x.ScanName
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetSuiteName() string {
	if x != nil {
		return x.SuiteName
	}
	return ""
}

// ComplianceOperatorProfileV2 is a message from Sensor (to Central) representing a compliance check profile.
// Next tag: 10.
type ComplianceOperatorProfileV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProfileId      string                              `protobuf:"bytes,2,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Name           string                              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ProfileVersion string                              `protobuf:"bytes,4,opt,name=profile_version,json=profileVersion,proto3" json:"profile_version,omitempty"`
	Labels         map[string]string                   `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations    map[string]string                   `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Description    string                              `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Rules          []*ComplianceOperatorProfileV2_Rule `protobuf:"bytes,8,rep,name=rules,proto3" json:"rules,omitempty"`
	Title          string                              `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ComplianceOperatorProfileV2) Reset() {
	*x = ComplianceOperatorProfileV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceOperatorProfileV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorProfileV2) ProtoMessage() {}

func (x *ComplianceOperatorProfileV2) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceOperatorProfileV2.ProtoReflect.Descriptor instead.
func (*ComplianceOperatorProfileV2) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{8}
}

func (x *ComplianceOperatorProfileV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetProfileVersion() string {
	if x != nil {
		return x.ProfileVersion
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ComplianceOperatorProfileV2) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ComplianceOperatorProfileV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetRules() []*ComplianceOperatorProfileV2_Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ComplianceOperatorProfileV2) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// ComplianceOperatorRuleV2 is a message from Sensor (to Central) representing a compliance check rule.
// Next tag: 12.
type ComplianceOperatorRuleV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version     string                         `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	RuleVersion string                         `protobuf:"bytes,3,opt,name=rule_version,json=ruleVersion,proto3" json:"rule_version,omitempty"`
	RuleType    string                         `protobuf:"bytes,4,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`
	Severity    ComplianceOperatorRuleSeverity `protobuf:"varint,5,opt,name=severity,proto3,enum=central.ComplianceOperatorRuleSeverity" json:"severity,omitempty"`
	Labels      map[string]string              `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations map[string]string              `protobuf:"bytes,7,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Title       string                         `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	Description string                         `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Rationale   string                         `protobuf:"bytes,10,opt,name=rationale,proto3" json:"rationale,omitempty"`
	Fixes       string                         `protobuf:"bytes,11,opt,name=fixes,proto3" json:"fixes,omitempty"`
}

func (x *ComplianceOperatorRuleV2) Reset() {
	*x = ComplianceOperatorRuleV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceOperatorRuleV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorRuleV2) ProtoMessage() {}

func (x *ComplianceOperatorRuleV2) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceOperatorRuleV2.ProtoReflect.Descriptor instead.
func (*ComplianceOperatorRuleV2) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{9}
}

func (x *ComplianceOperatorRuleV2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetRuleVersion() string {
	if x != nil {
		return x.RuleVersion
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetRuleType() string {
	if x != nil {
		return x.RuleType
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetSeverity() ComplianceOperatorRuleSeverity {
	if x != nil {
		return x.Severity
	}
	return ComplianceOperatorRuleSeverity_UNSET_RULE_SEVERITY
}

func (x *ComplianceOperatorRuleV2) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ComplianceOperatorRuleV2) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ComplianceOperatorRuleV2) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetRationale() string {
	if x != nil {
		return x.Rationale
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetFixes() string {
	if x != nil {
		return x.Fixes
	}
	return ""
}

type ApplyComplianceScanConfigRequest_BaseScanSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbRecordId             string   `protobuf:"bytes,1,opt,name=db_record_id,json=dbRecordId,proto3" json:"db_record_id,omitempty"`
	ScanName               string   `protobuf:"bytes,2,opt,name=scan_name,json=scanName,proto3" json:"scan_name,omitempty"`
	Profiles               []string `protobuf:"bytes,3,rep,name=profiles,proto3" json:"profiles,omitempty"`
	ShowNotApplicable      bool     `protobuf:"varint,4,opt,name=show_not_applicable,json=showNotApplicable,proto3" json:"show_not_applicable,omitempty"`
	StrictNodeScan         bool     `protobuf:"varint,5,opt,name=strict_node_scan,json=strictNodeScan,proto3" json:"strict_node_scan,omitempty"`
	AutoApplyRemediations  bool     `protobuf:"varint,6,opt,name=auto_apply_remediations,json=autoApplyRemediations,proto3" json:"auto_apply_remediations,omitempty"`
	AutoUpdateRemediations bool     `protobuf:"varint,7,opt,name=auto_update_remediations,json=autoUpdateRemediations,proto3" json:"auto_update_remediations,omitempty"`
}

func (x *ApplyComplianceScanConfigRequest_BaseScanSettings) Reset() {
	*x = ApplyComplianceScanConfigRequest_BaseScanSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyComplianceScanConfigRequest_BaseScanSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyComplianceScanConfigRequest_BaseScanSettings) ProtoMessage() {}

func (x *ApplyComplianceScanConfigRequest_BaseScanSettings) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyComplianceScanConfigRequest_BaseScanSettings.ProtoReflect.Descriptor instead.
func (*ApplyComplianceScanConfigRequest_BaseScanSettings) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ApplyComplianceScanConfigRequest_BaseScanSettings) GetDbRecordId() string {
	if x != nil {
		return x.DbRecordId
	}
	return ""
}

func (x *ApplyComplianceScanConfigRequest_BaseScanSettings) GetScanName() string {
	if x != nil {
		return x.ScanName
	}
	return ""
}

func (x *ApplyComplianceScanConfigRequest_BaseScanSettings) GetProfiles() []string {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *ApplyComplianceScanConfigRequest_BaseScanSettings) GetShowNotApplicable() bool {
	if x != nil {
		return x.ShowNotApplicable
	}
	return false
}

func (x *ApplyComplianceScanConfigRequest_BaseScanSettings) GetStrictNodeScan() bool {
	if x != nil {
		return x.StrictNodeScan
	}
	return false
}

func (x *ApplyComplianceScanConfigRequest_BaseScanSettings) GetAutoApplyRemediations() bool {
	if x != nil {
		return x.AutoApplyRemediations
	}
	return false
}

func (x *ApplyComplianceScanConfigRequest_BaseScanSettings) GetAutoUpdateRemediations() bool {
	if x != nil {
		return x.AutoUpdateRemediations
	}
	return false
}

type ApplyComplianceScanConfigRequest_OneTimeScan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanSettings *ApplyComplianceScanConfigRequest_BaseScanSettings `protobuf:"bytes,1,opt,name=scan_settings,json=scanSettings,proto3" json:"scan_settings,omitempty"`
}

func (x *ApplyComplianceScanConfigRequest_OneTimeScan) Reset() {
	*x = ApplyComplianceScanConfigRequest_OneTimeScan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyComplianceScanConfigRequest_OneTimeScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyComplianceScanConfigRequest_OneTimeScan) ProtoMessage() {}

func (x *ApplyComplianceScanConfigRequest_OneTimeScan) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyComplianceScanConfigRequest_OneTimeScan.ProtoReflect.Descriptor instead.
func (*ApplyComplianceScanConfigRequest_OneTimeScan) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ApplyComplianceScanConfigRequest_OneTimeScan) GetScanSettings() *ApplyComplianceScanConfigRequest_BaseScanSettings {
	if x != nil {
		return x.ScanSettings
	}
	return nil
}

type ApplyComplianceScanConfigRequest_ScheduledScan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanSettings *ApplyComplianceScanConfigRequest_BaseScanSettings `protobuf:"bytes,1,opt,name=scan_settings,json=scanSettings,proto3" json:"scan_settings,omitempty"`
	Cron         string                                             `protobuf:"bytes,2,opt,name=cron,proto3" json:"cron,omitempty"`
}

func (x *ApplyComplianceScanConfigRequest_ScheduledScan) Reset() {
	*x = ApplyComplianceScanConfigRequest_ScheduledScan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyComplianceScanConfigRequest_ScheduledScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyComplianceScanConfigRequest_ScheduledScan) ProtoMessage() {}

func (x *ApplyComplianceScanConfigRequest_ScheduledScan) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyComplianceScanConfigRequest_ScheduledScan.ProtoReflect.Descriptor instead.
func (*ApplyComplianceScanConfigRequest_ScheduledScan) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{3, 2}
}

func (x *ApplyComplianceScanConfigRequest_ScheduledScan) GetScanSettings() *ApplyComplianceScanConfigRequest_BaseScanSettings {
	if x != nil {
		return x.ScanSettings
	}
	return nil
}

func (x *ApplyComplianceScanConfigRequest_ScheduledScan) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

type ApplyComplianceScanConfigRequest_RerunScheduledScan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanName string `protobuf:"bytes,1,opt,name=scan_name,json=scanName,proto3" json:"scan_name,omitempty"`
}

func (x *ApplyComplianceScanConfigRequest_RerunScheduledScan) Reset() {
	*x = ApplyComplianceScanConfigRequest_RerunScheduledScan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyComplianceScanConfigRequest_RerunScheduledScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyComplianceScanConfigRequest_RerunScheduledScan) ProtoMessage() {}

func (x *ApplyComplianceScanConfigRequest_RerunScheduledScan) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyComplianceScanConfigRequest_RerunScheduledScan.ProtoReflect.Descriptor instead.
func (*ApplyComplianceScanConfigRequest_RerunScheduledScan) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{3, 3}
}

func (x *ApplyComplianceScanConfigRequest_RerunScheduledScan) GetScanName() string {
	if x != nil {
		return x.ScanName
	}
	return ""
}

type ComplianceResponse_EnableComplianceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*ComplianceResponse_EnableComplianceResponse_Error
	Payload isComplianceResponse_EnableComplianceResponse_Payload `protobuf_oneof:"payload"`
}

func (x *ComplianceResponse_EnableComplianceResponse) Reset() {
	*x = ComplianceResponse_EnableComplianceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceResponse_EnableComplianceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceResponse_EnableComplianceResponse) ProtoMessage() {}

func (x *ComplianceResponse_EnableComplianceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceResponse_EnableComplianceResponse.ProtoReflect.Descriptor instead.
func (*ComplianceResponse_EnableComplianceResponse) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ComplianceResponse_EnableComplianceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *ComplianceResponse_EnableComplianceResponse) GetPayload() isComplianceResponse_EnableComplianceResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ComplianceResponse_EnableComplianceResponse) GetError() string {
	if x, ok := x.GetPayload().(*ComplianceResponse_EnableComplianceResponse_Error); ok {
		return x.Error
	}
	return ""
}

type isComplianceResponse_EnableComplianceResponse_Payload interface {
	isComplianceResponse_EnableComplianceResponse_Payload()
}

type ComplianceResponse_EnableComplianceResponse_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ComplianceResponse_EnableComplianceResponse_Error) isComplianceResponse_EnableComplianceResponse_Payload() {
}

type ComplianceResponse_DisableComplianceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*ComplianceResponse_DisableComplianceResponse_Error
	Payload isComplianceResponse_DisableComplianceResponse_Payload `protobuf_oneof:"payload"`
}

func (x *ComplianceResponse_DisableComplianceResponse) Reset() {
	*x = ComplianceResponse_DisableComplianceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceResponse_DisableComplianceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceResponse_DisableComplianceResponse) ProtoMessage() {}

func (x *ComplianceResponse_DisableComplianceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceResponse_DisableComplianceResponse.ProtoReflect.Descriptor instead.
func (*ComplianceResponse_DisableComplianceResponse) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ComplianceResponse_DisableComplianceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *ComplianceResponse_DisableComplianceResponse) GetPayload() isComplianceResponse_DisableComplianceResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ComplianceResponse_DisableComplianceResponse) GetError() string {
	if x, ok := x.GetPayload().(*ComplianceResponse_DisableComplianceResponse_Error); ok {
		return x.Error
	}
	return ""
}

type isComplianceResponse_DisableComplianceResponse_Payload interface {
	isComplianceResponse_DisableComplianceResponse_Payload()
}

type ComplianceResponse_DisableComplianceResponse_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ComplianceResponse_DisableComplianceResponse_Error) isComplianceResponse_DisableComplianceResponse_Payload() {
}

type ComplianceResponse_ApplyComplianceScanConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*ComplianceResponse_ApplyComplianceScanConfigResponse_Error
	Payload isComplianceResponse_ApplyComplianceScanConfigResponse_Payload `protobuf_oneof:"payload"`
}

func (x *ComplianceResponse_ApplyComplianceScanConfigResponse) Reset() {
	*x = ComplianceResponse_ApplyComplianceScanConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceResponse_ApplyComplianceScanConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceResponse_ApplyComplianceScanConfigResponse) ProtoMessage() {}

func (x *ComplianceResponse_ApplyComplianceScanConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceResponse_ApplyComplianceScanConfigResponse.ProtoReflect.Descriptor instead.
func (*ComplianceResponse_ApplyComplianceScanConfigResponse) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{6, 2}
}

func (x *ComplianceResponse_ApplyComplianceScanConfigResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *ComplianceResponse_ApplyComplianceScanConfigResponse) GetPayload() isComplianceResponse_ApplyComplianceScanConfigResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ComplianceResponse_ApplyComplianceScanConfigResponse) GetError() string {
	if x, ok := x.GetPayload().(*ComplianceResponse_ApplyComplianceScanConfigResponse_Error); ok {
		return x.Error
	}
	return ""
}

type isComplianceResponse_ApplyComplianceScanConfigResponse_Payload interface {
	isComplianceResponse_ApplyComplianceScanConfigResponse_Payload()
}

type ComplianceResponse_ApplyComplianceScanConfigResponse_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ComplianceResponse_ApplyComplianceScanConfigResponse_Error) isComplianceResponse_ApplyComplianceScanConfigResponse_Payload() {
}

type ComplianceResponse_DeleteComplianceScanConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*ComplianceResponse_DeleteComplianceScanConfigResponse_Error
	Payload isComplianceResponse_DeleteComplianceScanConfigResponse_Payload `protobuf_oneof:"payload"`
}

func (x *ComplianceResponse_DeleteComplianceScanConfigResponse) Reset() {
	*x = ComplianceResponse_DeleteComplianceScanConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceResponse_DeleteComplianceScanConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceResponse_DeleteComplianceScanConfigResponse) ProtoMessage() {}

func (x *ComplianceResponse_DeleteComplianceScanConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceResponse_DeleteComplianceScanConfigResponse.ProtoReflect.Descriptor instead.
func (*ComplianceResponse_DeleteComplianceScanConfigResponse) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{6, 3}
}

func (x *ComplianceResponse_DeleteComplianceScanConfigResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *ComplianceResponse_DeleteComplianceScanConfigResponse) GetPayload() isComplianceResponse_DeleteComplianceScanConfigResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ComplianceResponse_DeleteComplianceScanConfigResponse) GetError() string {
	if x, ok := x.GetPayload().(*ComplianceResponse_DeleteComplianceScanConfigResponse_Error); ok {
		return x.Error
	}
	return ""
}

type isComplianceResponse_DeleteComplianceScanConfigResponse_Payload interface {
	isComplianceResponse_DeleteComplianceScanConfigResponse_Payload()
}

type ComplianceResponse_DeleteComplianceScanConfigResponse_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ComplianceResponse_DeleteComplianceScanConfigResponse_Error) isComplianceResponse_DeleteComplianceScanConfigResponse_Payload() {
}

type ComplianceOperatorProfileV2_Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleName string `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
}

func (x *ComplianceOperatorProfileV2_Rule) Reset() {
	*x = ComplianceOperatorProfileV2_Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internalapi_central_compliance_operator_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceOperatorProfileV2_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorProfileV2_Rule) ProtoMessage() {}

func (x *ComplianceOperatorProfileV2_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_compliance_operator_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceOperatorProfileV2_Rule.ProtoReflect.Descriptor instead.
func (*ComplianceOperatorProfileV2_Rule) Descriptor() ([]byte, []int) {
	return file_internalapi_central_compliance_operator_proto_rawDescGZIP(), []int{8, 2}
}

func (x *ComplianceOperatorProfileV2_Rule) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

var File_internalapi_central_compliance_operator_proto protoreflect.FileDescriptor

var file_internalapi_central_compliance_operator_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x02, 0x0a, 0x16, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x6f,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x70, 0x6f, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x50, 0x6f, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x18, 0x0a, 0x16, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x64,
	0x73, 0x5f, 0x6f, 0x70, 0x74, 0x42, 0x16, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x5f, 0x70, 0x6f, 0x64, 0x73, 0x5f, 0x6f, 0x70, 0x74, 0x22, 0x29, 0x0a,
	0x17, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xc6, 0x07, 0x0a, 0x20, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x0d, 0x6f, 0x6e, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x6e, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x6e, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x60, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x5d, 0x0a, 0x0a, 0x72, 0x65, 0x72, 0x75,
	0x6e, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x72, 0x75, 0x6e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65,
	0x72, 0x75, 0x6e, 0x53, 0x63, 0x61, 0x6e, 0x1a, 0xb9, 0x02, 0x0a, 0x10, 0x42, 0x61, 0x73, 0x65,
	0x53, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0c,
	0x64, 0x62, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x62, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x63, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x6f, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x63, 0x61,
	0x6e, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f,
	0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x61, 0x75, 0x74,
	0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x6e, 0x0a, 0x0b, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x63,
	0x61, 0x6e, 0x12, 0x5f, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x1a, 0x84, 0x01, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x5f, 0x0a, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x63, 0x61, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x1a, 0x31, 0x0a, 0x12, 0x52, 0x65,
	0x72, 0x75, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47, 0x0a,
	0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf8, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x11,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61,
	0x6c, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x52, 0x0a,
	0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6c, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x57, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5a, 0x0a, 0x12, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x61, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x8a, 0x07, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x1a, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77,
	0x0a, 0x1b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x25, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x63, 0x61,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61,
	0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x21, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x26,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x22,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x4d, 0x0a, 0x18, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x1a, 0x4e, 0x0a, 0x19, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x1a, 0x56, 0x0a, 0x21, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x09,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x57, 0x0a, 0x22, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xaf,
	0x07, 0x0a, 0x1f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x56, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x63, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x56, 0x32, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a, 0x08, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x32, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x5b, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61,
	0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56,
	0x32, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3d, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63, 0x61, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x73, 0x0a, 0x0b, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e,
	0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x04, 0x12, 0x0a,
	0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f,
	0x54, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x06, 0x12, 0x10,
	0x0a, 0x0c, 0x49, 0x4e, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x07,
	0x22, 0xc5, 0x04, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x32,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x56, 0x32, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x57, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x56,
	0x32, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3f, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x56, 0x32, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x23, 0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd1, 0x04, 0x0a, 0x18, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x75, 0x6c, 0x65, 0x56, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x54, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x75, 0x6c, 0x65, 0x56, 0x32, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x78, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x78, 0x65,
	0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0xb5, 0x01, 0x0a,
	0x1e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x17, 0x0a, 0x13, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x45,
	0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54,
	0x59, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x52, 0x55, 0x4c, 0x45,
	0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4c,
	0x4f, 0x57, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59,
	0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x5f, 0x52, 0x55, 0x4c,
	0x45, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12,
	0x48, 0x49, 0x47, 0x48, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49,
	0x54, 0x59, 0x10, 0x05, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61,
	0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internalapi_central_compliance_operator_proto_rawDescOnce sync.Once
	file_internalapi_central_compliance_operator_proto_rawDescData = file_internalapi_central_compliance_operator_proto_rawDesc
)

func file_internalapi_central_compliance_operator_proto_rawDescGZIP() []byte {
	file_internalapi_central_compliance_operator_proto_rawDescOnce.Do(func() {
		file_internalapi_central_compliance_operator_proto_rawDescData = protoimpl.X.CompressGZIP(file_internalapi_central_compliance_operator_proto_rawDescData)
	})
	return file_internalapi_central_compliance_operator_proto_rawDescData
}

var file_internalapi_central_compliance_operator_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_internalapi_central_compliance_operator_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_internalapi_central_compliance_operator_proto_goTypes = []interface{}{
	(ComplianceOperatorRuleSeverity)(0),                           // 0: central.ComplianceOperatorRuleSeverity
	(ComplianceOperatorCheckResultV2_CheckStatus)(0),              // 1: central.ComplianceOperatorCheckResultV2.CheckStatus
	(*ComplianceOperatorInfo)(nil),                                // 2: central.ComplianceOperatorInfo
	(*EnableComplianceRequest)(nil),                               // 3: central.EnableComplianceRequest
	(*DisableComplianceRequest)(nil),                              // 4: central.DisableComplianceRequest
	(*ApplyComplianceScanConfigRequest)(nil),                      // 5: central.ApplyComplianceScanConfigRequest
	(*DeleteComplianceScanConfigRequest)(nil),                     // 6: central.DeleteComplianceScanConfigRequest
	(*ComplianceRequest)(nil),                                     // 7: central.ComplianceRequest
	(*ComplianceResponse)(nil),                                    // 8: central.ComplianceResponse
	(*ComplianceOperatorCheckResultV2)(nil),                       // 9: central.ComplianceOperatorCheckResultV2
	(*ComplianceOperatorProfileV2)(nil),                           // 10: central.ComplianceOperatorProfileV2
	(*ComplianceOperatorRuleV2)(nil),                              // 11: central.ComplianceOperatorRuleV2
	(*ApplyComplianceScanConfigRequest_BaseScanSettings)(nil),     // 12: central.ApplyComplianceScanConfigRequest.BaseScanSettings
	(*ApplyComplianceScanConfigRequest_OneTimeScan)(nil),          // 13: central.ApplyComplianceScanConfigRequest.OneTimeScan
	(*ApplyComplianceScanConfigRequest_ScheduledScan)(nil),        // 14: central.ApplyComplianceScanConfigRequest.ScheduledScan
	(*ApplyComplianceScanConfigRequest_RerunScheduledScan)(nil),   // 15: central.ApplyComplianceScanConfigRequest.RerunScheduledScan
	(*ComplianceResponse_EnableComplianceResponse)(nil),           // 16: central.ComplianceResponse.EnableComplianceResponse
	(*ComplianceResponse_DisableComplianceResponse)(nil),          // 17: central.ComplianceResponse.DisableComplianceResponse
	(*ComplianceResponse_ApplyComplianceScanConfigResponse)(nil),  // 18: central.ComplianceResponse.ApplyComplianceScanConfigResponse
	(*ComplianceResponse_DeleteComplianceScanConfigResponse)(nil), // 19: central.ComplianceResponse.DeleteComplianceScanConfigResponse
	nil,                                      // 20: central.ComplianceOperatorCheckResultV2.LabelsEntry
	nil,                                      // 21: central.ComplianceOperatorCheckResultV2.AnnotationsEntry
	nil,                                      // 22: central.ComplianceOperatorProfileV2.LabelsEntry
	nil,                                      // 23: central.ComplianceOperatorProfileV2.AnnotationsEntry
	(*ComplianceOperatorProfileV2_Rule)(nil), // 24: central.ComplianceOperatorProfileV2.Rule
	nil,                                      // 25: central.ComplianceOperatorRuleV2.LabelsEntry
	nil,                                      // 26: central.ComplianceOperatorRuleV2.AnnotationsEntry
	(*timestamppb.Timestamp)(nil),            // 27: google.protobuf.Timestamp
}
var file_internalapi_central_compliance_operator_proto_depIdxs = []int32{
	13, // 0: central.ApplyComplianceScanConfigRequest.one_time_scan:type_name -> central.ApplyComplianceScanConfigRequest.OneTimeScan
	14, // 1: central.ApplyComplianceScanConfigRequest.scheduled_scan:type_name -> central.ApplyComplianceScanConfigRequest.ScheduledScan
	15, // 2: central.ApplyComplianceScanConfigRequest.rerun_scan:type_name -> central.ApplyComplianceScanConfigRequest.RerunScheduledScan
	3,  // 3: central.ComplianceRequest.enable_compliance:type_name -> central.EnableComplianceRequest
	4,  // 4: central.ComplianceRequest.disable_compliance:type_name -> central.DisableComplianceRequest
	5,  // 5: central.ComplianceRequest.apply_scan_config:type_name -> central.ApplyComplianceScanConfigRequest
	6,  // 6: central.ComplianceRequest.delete_scan_config:type_name -> central.DeleteComplianceScanConfigRequest
	16, // 7: central.ComplianceResponse.enable_compliance_response:type_name -> central.ComplianceResponse.EnableComplianceResponse
	17, // 8: central.ComplianceResponse.disable_compliance_response:type_name -> central.ComplianceResponse.DisableComplianceResponse
	18, // 9: central.ComplianceResponse.apply_compliance_scan_config_response:type_name -> central.ComplianceResponse.ApplyComplianceScanConfigResponse
	19, // 10: central.ComplianceResponse.delete_compliance_scan_config_response:type_name -> central.ComplianceResponse.DeleteComplianceScanConfigResponse
	1,  // 11: central.ComplianceOperatorCheckResultV2.status:type_name -> central.ComplianceOperatorCheckResultV2.CheckStatus
	0,  // 12: central.ComplianceOperatorCheckResultV2.severity:type_name -> central.ComplianceOperatorRuleSeverity
	20, // 13: central.ComplianceOperatorCheckResultV2.labels:type_name -> central.ComplianceOperatorCheckResultV2.LabelsEntry
	21, // 14: central.ComplianceOperatorCheckResultV2.annotations:type_name -> central.ComplianceOperatorCheckResultV2.AnnotationsEntry
	27, // 15: central.ComplianceOperatorCheckResultV2.created_time:type_name -> google.protobuf.Timestamp
	22, // 16: central.ComplianceOperatorProfileV2.labels:type_name -> central.ComplianceOperatorProfileV2.LabelsEntry
	23, // 17: central.ComplianceOperatorProfileV2.annotations:type_name -> central.ComplianceOperatorProfileV2.AnnotationsEntry
	24, // 18: central.ComplianceOperatorProfileV2.rules:type_name -> central.ComplianceOperatorProfileV2.Rule
	0,  // 19: central.ComplianceOperatorRuleV2.severity:type_name -> central.ComplianceOperatorRuleSeverity
	25, // 20: central.ComplianceOperatorRuleV2.labels:type_name -> central.ComplianceOperatorRuleV2.LabelsEntry
	26, // 21: central.ComplianceOperatorRuleV2.annotations:type_name -> central.ComplianceOperatorRuleV2.AnnotationsEntry
	12, // 22: central.ApplyComplianceScanConfigRequest.OneTimeScan.scan_settings:type_name -> central.ApplyComplianceScanConfigRequest.BaseScanSettings
	12, // 23: central.ApplyComplianceScanConfigRequest.ScheduledScan.scan_settings:type_name -> central.ApplyComplianceScanConfigRequest.BaseScanSettings
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_internalapi_central_compliance_operator_proto_init() }
func file_internalapi_central_compliance_operator_proto_init() {
	if File_internalapi_central_compliance_operator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internalapi_central_compliance_operator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceOperatorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableComplianceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableComplianceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyComplianceScanConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteComplianceScanConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceOperatorCheckResultV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceOperatorProfileV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceOperatorRuleV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyComplianceScanConfigRequest_BaseScanSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyComplianceScanConfigRequest_OneTimeScan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyComplianceScanConfigRequest_ScheduledScan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyComplianceScanConfigRequest_RerunScheduledScan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceResponse_EnableComplianceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceResponse_DisableComplianceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceResponse_ApplyComplianceScanConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceResponse_DeleteComplianceScanConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internalapi_central_compliance_operator_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceOperatorProfileV2_Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_internalapi_central_compliance_operator_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ComplianceOperatorInfo_TotalDesiredPods)(nil),
		(*ComplianceOperatorInfo_TotalReadyPods)(nil),
	}
	file_internalapi_central_compliance_operator_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ApplyComplianceScanConfigRequest_OneTimeScan_)(nil),
		(*ApplyComplianceScanConfigRequest_ScheduledScan_)(nil),
		(*ApplyComplianceScanConfigRequest_RerunScan)(nil),
	}
	file_internalapi_central_compliance_operator_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ComplianceRequest_EnableCompliance)(nil),
		(*ComplianceRequest_DisableCompliance)(nil),
		(*ComplianceRequest_ApplyScanConfig)(nil),
		(*ComplianceRequest_DeleteScanConfig)(nil),
	}
	file_internalapi_central_compliance_operator_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ComplianceResponse_EnableComplianceResponse_)(nil),
		(*ComplianceResponse_DisableComplianceResponse_)(nil),
		(*ComplianceResponse_ApplyComplianceScanConfigResponse_)(nil),
		(*ComplianceResponse_DeleteComplianceScanConfigResponse_)(nil),
	}
	file_internalapi_central_compliance_operator_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ComplianceResponse_EnableComplianceResponse_Error)(nil),
	}
	file_internalapi_central_compliance_operator_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*ComplianceResponse_DisableComplianceResponse_Error)(nil),
	}
	file_internalapi_central_compliance_operator_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ComplianceResponse_ApplyComplianceScanConfigResponse_Error)(nil),
	}
	file_internalapi_central_compliance_operator_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*ComplianceResponse_DeleteComplianceScanConfigResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internalapi_central_compliance_operator_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internalapi_central_compliance_operator_proto_goTypes,
		DependencyIndexes: file_internalapi_central_compliance_operator_proto_depIdxs,
		EnumInfos:         file_internalapi_central_compliance_operator_proto_enumTypes,
		MessageInfos:      file_internalapi_central_compliance_operator_proto_msgTypes,
	}.Build()
	File_internalapi_central_compliance_operator_proto = out.File
	file_internalapi_central_compliance_operator_proto_rawDesc = nil
	file_internalapi_central_compliance_operator_proto_goTypes = nil
	file_internalapi_central_compliance_operator_proto_depIdxs = nil
}
