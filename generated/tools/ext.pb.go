// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tools/ext.proto

package tools

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

var E_Moretags = &proto.ExtensionDesc{
	ExtendedType:  (*descriptorpb.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         50000,
	Name:          "tools.moretags",
	Tag:           "bytes,50000,opt,name=moretags",
	Filename:      "tools/ext.proto",
}

var E_Jsontag = &proto.ExtensionDesc{
	ExtendedType:  (*descriptorpb.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         50001,
	Name:          "tools.jsontag",
	Tag:           "bytes,50001,opt,name=jsontag",
	Filename:      "tools/ext.proto",
}

var E_EqualAll = &proto.ExtensionDesc{
	ExtendedType:  (*descriptorpb.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         50002,
	Name:          "tools.equal_all",
	Tag:           "bytes,50002,opt,name=equal_all",
	Filename:      "tools/ext.proto",
}

func init() {
	proto.RegisterExtension(E_Moretags)
	proto.RegisterExtension(E_Jsontag)
	proto.RegisterExtension(E_EqualAll)
}

func init() { proto.RegisterFile("tools/ext.proto", fileDescriptor_ef03083b2b182403) }

var fileDescriptor_ef03083b2b182403 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0xc9, 0xcf, 0xcf,
	0x29, 0xd6, 0x4f, 0xad, 0x28, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x0b, 0x48,
	0x29, 0xa4, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x83, 0x05, 0x93, 0x4a, 0xd3, 0xf4, 0x53, 0x52,
	0x8b, 0x93, 0x8b, 0x32, 0x0b, 0x4a, 0xf2, 0x8b, 0x20, 0x0a, 0xad, 0xac, 0xb9, 0x38, 0x72, 0xf3,
	0x8b, 0x52, 0x4b, 0x12, 0xd3, 0x8b, 0x85, 0x64, 0xf5, 0x20, 0xca, 0xf5, 0x60, 0xca, 0xf5, 0xdc,
	0x32, 0x53, 0x73, 0x52, 0xfc, 0x0b, 0x4a, 0x32, 0xf3, 0xf3, 0x8a, 0x25, 0x2e, 0xb4, 0x31, 0x2b,
	0x30, 0x6a, 0x70, 0x06, 0xc1, 0x35, 0x58, 0x59, 0x72, 0xb1, 0x67, 0x15, 0xe7, 0xe7, 0x95, 0x24,
	0xa6, 0x13, 0xd2, 0x7b, 0x11, 0xaa, 0x17, 0xa6, 0xde, 0xca, 0x86, 0x8b, 0x33, 0xb5, 0xb0, 0x34,
	0x31, 0x27, 0x3e, 0x31, 0x27, 0x87, 0x90, 0xe6, 0x4b, 0x30, 0x8b, 0xc1, 0x3a, 0x1c, 0x73, 0x72,
	0x9c, 0xc4, 0x4f, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x19,
	0x8f, 0xe5, 0x18, 0xa2, 0x20, 0x1e, 0x4e, 0x62, 0x03, 0x9b, 0x60, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0x0f, 0x22, 0x36, 0x44, 0x11, 0x01, 0x00, 0x00,
}
